// <auto-generated />
using System;
using Infrastructure.RealDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    [Migration("20231221121943_NewDbContext")]
    partial class NewDbContext
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AnimalUser", b =>
                {
                    b.Property<Guid>("AnimalsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AnimalsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("AnimalUser");
                });

            modelBuilder.Entity("Domain.Models.Animals.Animal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Animal");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Animal");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("16dfa628-e271-4e44-a468-776596ee3bf6"),
                            Password = "$2a$11$B6eiS8e2OrTVWBbeiymNyud38t3pKNULLgjrIeIq4hVS9Oi6.vUiu",
                            UserName = "admin"
                        },
                        new
                        {
                            Id = new Guid("0b4faff3-220b-458a-9b3c-6ccad4944a1e"),
                            Password = "$2a$11$cX3VvrsJs99sF/4hIdzLS.djNcNgpSM1YJ3a85U7LyV/m0spVPqJC",
                            UserName = "string"
                        });
                });

            modelBuilder.Entity("Domain.Models.Animals.Bird", b =>
                {
                    b.HasBaseType("Domain.Models.Animals.Animal");

                    b.Property<bool>("CanFly")
                        .HasColumnType("bit");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Bird");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4ab87708-8db2-43a9-8a70-512a57fb7f28"),
                            Name = "Peppe",
                            CanFly = true,
                            Color = "Blue"
                        },
                        new
                        {
                            Id = new Guid("d6cb732d-a317-41ee-a7c9-c944b03aabc3"),
                            Name = "Charlie",
                            CanFly = true,
                            Color = "Yellow"
                        },
                        new
                        {
                            Id = new Guid("f50c5c81-756c-41f8-a53b-48a6017b0eff"),
                            Name = "Kiwi",
                            CanFly = false,
                            Color = "Green"
                        });
                });

            modelBuilder.Entity("Domain.Models.Animals.Cat", b =>
                {
                    b.HasBaseType("Domain.Models.Animals.Animal");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("bit");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Cat");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d0f80c75-bfa2-41b3-bfc5-79e72a0065fc"),
                            Name = "Kajsa",
                            Breed = "British Shorthair",
                            LikesToPlay = true,
                            Weight = 4
                        },
                        new
                        {
                            Id = new Guid("b8f5937a-2579-4bd0-b786-23bed0ca5b97"),
                            Name = "Sigge",
                            Breed = "Maine Coon",
                            LikesToPlay = true,
                            Weight = 10
                        },
                        new
                        {
                            Id = new Guid("cae1346c-deef-4180-9aec-12ba98ea55ef"),
                            Name = "Lisa",
                            Breed = "Ragdoll",
                            LikesToPlay = true,
                            Weight = 8
                        });
                });

            modelBuilder.Entity("Domain.Models.Animals.Dog", b =>
                {
                    b.HasBaseType("Domain.Models.Animals.Animal");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.ToTable("Animal", t =>
                        {
                            t.Property("Breed")
                                .HasColumnName("Dog_Breed");

                            t.Property("Weight")
                                .HasColumnName("Dog_Weight");
                        });

                    b.HasDiscriminator().HasValue("Dog");

                    b.HasData(
                        new
                        {
                            Id = new Guid("faf64302-6f53-4594-a436-fae4eb13e05f"),
                            Name = "Boss",
                            Breed = "English Bulldog",
                            Weight = 30
                        },
                        new
                        {
                            Id = new Guid("e1dd04f3-e383-4423-882e-c0f4905a320a"),
                            Name = "Luffsen",
                            Breed = "Bernese Mountain Dog",
                            Weight = 60
                        },
                        new
                        {
                            Id = new Guid("07001207-f0ca-47f4-8f98-305825f64679"),
                            Name = "Pim",
                            Breed = "Cocker Spaniel",
                            Weight = 15
                        });
                });

            modelBuilder.Entity("AnimalUser", b =>
                {
                    b.HasOne("Domain.Models.Animals.Animal", null)
                        .WithMany()
                        .HasForeignKey("AnimalsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
